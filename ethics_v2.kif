(documentation Ethics EnglishLanguage "Ethics is the normative science of the conduct of human beings living in society, which judges this conduct to be right or wrong, to be good or bad, or in some similar way. (An Introduction to Ethics (LIllie, 1948))")

;; This might be questionable?
(instance Ethics FieldOfStudy)

;; Philosophy is technically an "instance" of FieldOfStudy... seems wrong.
;; (subclass Ethics Philosophy)
(subclass Ethics Science)

(documentation MoralAttribute EnglishLanguage "Moral Attributes are a subcass of Normative Attributes intended to denote whether something is Good, Bad, Right, Wrong, Virtuous, Viceful, or other moral attributes.")
(subclass MoralAttribute NormativeAttribute)

(instance MorallyGood MoralAttribute)
(instance MorallyBad MoralAttribute)
;; MorallyBetter, MorallyWorse, 

(subclass VirtueAttribute MoralAttribute)
(subclass ViceAttribute MoralAttribute)

(subclass VirtueAttribute PsychologicalAttribute)
(subclass ViceAttribute PsychologicalAttribute)

;; Generally speaking, yes.  Might some paraconsistency reign?  :- p
(contraryAttribute MorallyGood MorallyBad)
(contraryAttribute VirtueAttribute ViceAtribute)

;; I see how this definition motivates the need for target-specificity or domain-specificity
(documentation VirtuousAgent EnglishLanguage "'A virtuous agent is one who has, and exercises, certain character traits, namely, the virtues.' (On Virtue Ethics)")
(subclass VirtuousAgent AutonomousAgent)
(=>
    (and
        (instance ?AGENT AutonomousAgent)
        (instance ?VIRTUE VirtueAttribute)
        (attribute ?AGENT ?VIRTUE))
    (instance ?AGENT VirtuousAgent))

(documentation ViciousAgent EnglishLanguage "A vicious agent is one who has, and exercises, certain character traits, namely, the vices.  The antonym of VirtuousAgent.")
(subclass ViciousAgent AutonomousAgent)
(=>
    (and
        (instance ?AGENT AutonomousAgent)
        (instance ?VICE ViceAttribute)
        (attribute ?AGENT ?VICE))
    (instance ?AGENT VirtuousAgent))

;; Encapsulate the Autonomous Agent aspect of "behavior"-type processes.
(documentation AutonomousAgentProcess EnglishLanguage "AgentProcess is the Class of all Processes in which there is an autonomous agent.")
(subclass AutonomousAgentProcess Process)
(subclass BodyMotion AutonomousAgentProcess)
(subclass Vocalizing AutonomousAgentProcess)

(=>
    (instance ?PROC AutonomousAgentProcess)
    (exists (?AGENT)
        (and 
            (agent ?PROC ?AGENT)
            (instance ?AGENT AutonomousAgent))))


(documentation MoralJudging EnglishLanguage "A subclass of Judging where the proposition believed is the assignment of a moral attribute to a behavior.")
(subclass MoralJudging Judging)

(subclass MoralJudging Judging)

(=>
    (instance ?JUDGE MoralJudging)
    (exists (?BEHAVE ?MORAL)
        (and 
            (instance ?BEHAVE AutonomousAgentProcess)
            (instance ?MORAL MoralAttribute)
            (patient ?JUDGE 
                (modalAttribute ?BEHAVE ?MORAL)))))

;; Ethics refers to the moral judging of processes (behavior) of members of groups (aka society, lol).
;; Not sure how to get the "normative science" part in.  I think there's a lot of hidden baggage in the term "normative".
(and 
    (refers Ethics ?JUDGE)
    (instance ?JUDGE MoralJudging)
    (member ?MEMB ?Group)
    (instance ?BEHAVE AutonomousAgentProcess)
    (agent ?MEMB ?BEHAVE)
    (patient ?JUDGE ?BEHAVE))

(subclass MoralNihilism Ethics)
(subclass Deontology Ethics)
(subclass Utilitarianism Ethics)
(subclass VirtueEthics Ethics)

;; Take one on Moral Nihilism: Nothing has any moral attributes.
(and 
    (refers MoralNihilism ?STATE)
    (instance ?STATE Stating)
    (patient ?STATE 
        (not 
            (exists (?BEHAVE ?MORAL) 
                (and 
                    (instance ?BEHAVE AutonomousAgentProcess)
                    (instance ?MORAL MoralAttribute)
                    (modalAttribute ?BEHAVE ?MORAL))))))

;; Take two: "Nothing is morally wrong." (from SEP Moral Skepticism); 
;;technically, this would be a noncognitivist nihilism, I suppose (citing Ethics: The Fundamentals)
(and 
    (refers MoralNihilism ?STATE)
    (instance ?STATE Stating)
    (patient ?STATE 
        (not 
            (exists (?BEHAVE) 
                (and 
                    (instance ?BEHAVE AutonomousAgentProcess)
                    (modalAttribute ?BEHAVE MorallyBad))))))

;; Take three without the "Stating" -- My favorite.
(and 
    (refers MoralNihilism ?STATE)
    (instance ?STATE Statement)
    (equal ?STATE 
        (not 
            (exists (?BEHAVE) 
                (and 
                    (instance ?BEHAVE AutonomousAgentProcess)
                    (modalAttribute ?BEHAVE MorallyBad))))))

;; Take four without the "Statement"
(refers MoralNihilism 
    (not 
        (exists (?BEHAVE) 
            (and 
                (instance ?BEHAVE AutonomousAgentProcess)
                (modalAttribute ?BEHAVE MorallyBad)))))                  

;; "Moral nihilism is the view that there are no moral facts." (Ethics: The FUudamental)
;; There is no moral judging (with behavior and moral judgments) that is a fact.
(and 
    (refers MoralNihilism ?STATE)
    (instance ?STATE Statement)
    (equal ?STATE 
        (not 
            (exists (?JUDGE) 
                (and 
                    (instance ?JUDGE MoralJudging)
                    (patient ?JUDGE ?MORALSTATEMENT)
                    (instance ?MORALSTATEMENT Fact))))))

;; Deontology refers to statements of the nature that there exist rules such that 
;; if followed, behavior is good or if not followed, behavior is bad.
(and 
    (refers Deontology ?STATE)
    (instance ?STATE Statement)
    (equal ?STATE
        (or
            (exists (?RULE)
                (=>
                    (conforms ?BEHAVE ?RULE)
                    (and 
                        (instance ?JUDGE MoralJudging)
                        (patient ?JUDGE
                            (modalAttribute ?BEHAVE MorallyGood)))))
            (exists (?RULE)
                (=>
                    (not 
                        (conforms ?BEHAVE ?RULE))
                    (and 
                        (instance ?JUDGE MoralJudging)
                        (patient ?JUDGE
                            (modalAttribute ?BEHAVE MorallyBad))))))))       
                            
(documentation conformsFormula EnglishLanguage "(conforms ?OBJ ?FORMULA) describes how ?OBJ follows the ideas outlined by the proposition represented by ?FORMULA.")

(domain conformsFormula 1 Object)
(domain conformsFormula 2 Formula)
(instance conformsFormula BinaryPredicate)
(subrelation conformsFormula represents)

;; Take one
;; Q: should I use realization or conforms?
(=> 
    (conformsFormula ?OBJ ?FORMULA)
    (and 
        (containsInformation ?FORMULA ?PROP)
        (conforms ?OBJ ?PROP)))

;; Take two -- should I say that this proposition the formula is expressing exists?
(=> 
    (conformsFormula ?OBJ ?FORMULA)
    (exists (?PROP)
        (and 
            (containsInformation ?FORMULA ?PROP)
            (conforms ?OBJ ?PROP))))

;; Take two: specify that rules are formulas (of suo-kif :-p)       
(and 
    (refers Deontology ?STATE)
    (instance ?STATE Statement)
    (equal ?STATE
        (or
            (exists (?RULE)
                (=>
                    (conformsFormula ?BEHAVE ?RULE)
                    (and 
                        (instance ?JUDGE MoralJudging)
                        (patient ?JUDGE
                            (modalAttribute ?BEHAVE MorallyGood)))))
            (exists (?RULE)
                (=>
                    (not 
                        (conformsFormula ?BEHAVE ?RULE))
                    (and 
                        (instance ?JUDGE MoralJudging)
                        (patient ?JUDGE
                            (modalAttribute ?BEHAVE MorallyBad))))))))

;; Take three: specify that the rules correspond to Deontic Attributes
;; If a rule adheres to obligation, good; if a rule doesn't, bad.
;; If a rule violates a prohibition, good; otherwise ... unspecified?
;; If an action prevents an action that is permitted, bad.
(and 
    (refers Deontology ?STATE)
    (instance ?STATE Statement)
    (equal ?STATE
        (or
            (exists (?RULE)
                (and 
                    (modalAttribute ?RULE Obligation)
                    (=>
                        (conformsFormula ?BEHAVE ?RULE)
                        (and 
                            (instance ?JUDGE MoralJudging)
                            (patient ?JUDGE
                                (modalAttribute ?BEHAVE MorallyGood))))
                    (=>
                        (not 
                            (conformsFormula ?BEHAVE ?RULE))
                        (and 
                            (instance ?JUDGE MoralJudging)
                            (patient ?JUDGE
                                (modalAttribute ?BEHAVE MorallyBad))))))
             (exists (?RULE)
                (and 
                    (modalAttribute ?RULE Prohibition)
                    (=> 
                        (conformsFormula ?BEHAVE ?RULE)
                        (and 
                            (instance ?JUDGE MoralJudging)
                            (patient ?JUDGE
                                (modalAttribute ?BEHAVE MorallyBad))))))
            (exists (?RULE) 
                (and 
                    (modalAttribute ?RULE Permission)
                    (=> 
                        (and 
                            (conformsFormula ?BEHAVE1 ?RULE)
                            (prevents ?BEHAVE2 ?BEHAVE1)
                            (instance ?BEHAVE2 AutonomousAgentProcess))
                        (and 
                            (instance ?JUDGE MoralJudging)
                            (patient ?JUDGE 
                                (modalAttribute ?BEHAVE2 MorallyBad)))))))))  


;; Take four: remove the MoralJudging part as maybe the statement should be that it just "is" MorallyBad :D.
;; Although this sort of bypasses the definition of ethics as concerned with moral judgments. 
;; However, it may still fit the definition of a moral judgment!
(and 
    (refers Deontology ?STATE)
    (instance ?STATE Statement)
    (equal ?STATE
        (or
            (exists (?RULE)
                (and 
                    (modalAttribute ?RULE Obligation)
                    (=>
                        (conformsFormula ?BEHAVE ?RULE)
                        (modalAttribute ?BEHAVE MorallyGood))
                    (=>
                        (not 
                            (conformsFormula ?BEHAVE ?RULE))
                        (modalAttribute ?BEHAVE MorallyBad))))
             (exists (?RULE)
                (and 
                    (modalAttribute ?RULE Prohibition)
                    (=> 
                        (conformsFormula ?BEHAVE ?RULE)
                        (modalAttribute ?BEHAVE MorallyBad))))
            (exists (?RULE) 
                (and 
                    (modalAttribute ?RULE Permission)
                    (=> 
                        (and 
                            (conformsFormula ?BEHAVE1 ?RULE)
                            (prevents ?BEHAVE2 ?BEHAVE1)
                            (instance ?BEHAVE2 AutonomousAgentProcess))
                        (modalAttribute ?BEHAVE2 MorallyBad)))))))              
               
;; "An action is right iff it is what a virtuous agent would characteristically (i.e. acting in character) do in the circumstances." (On Virtue Ethics -- Right Action)
;; Take one without the "would characteristically do" part.
(and 
    (refers VirtueEthics ?STATE)
    (instance ?STATE Statement)
    (equal ?STATE
        (<=>
            (modalAttribute ?BEHAVE MorallyGood)
            (and 
                (agent ?BEHAVE ?AGENT)
                (instance ?AGENT VirtuousAgent)))))

;; A set of the possible options in a decision... seems not needed :D
(subclass DecisionSet NonNullSet)


(documentation DecisionOptionFn EnglishLanguage "A UnaryFunction that maps an instance of Deciding to the set of possibilities that are available.")
(domain DecisionOptionFn 1 Deciding)
(instance DecisionOptionFn TotalValuedRelation)
(instance DecisionOptionFn UnaryFunction)
(range DecisionOptionFn Set)

(=>
    (member ?P (DecisionOptionFn ?DECIDE))
    (patient ?DECIDE ?P))

(=> 
    (patient ?DECIDE ?P)
    (member ?P (DecisionOptionFn ?DECIDE)))

;; I wish to use 'result' to denote the processes that is decided upon and 'patient' to denote those being chosen among.
;; So the result should be one of the processes being considered.
(=> 
    (and
        (instance ?DECIDE Deciding)
        (result ?DECIDE ?P))
    (patient ?DECIDE ?P))

;; (and 
;;     (refers VirtueEthics ?STATE) 
;;     (instance ?STATE Statement)
;;     (equal ?STATE
;;         (<=>
;;             (modalAttribute ?BEHAVE MorallyGood)
;;             (=>
;;                 (exists (?AGENT))

