;; Resolved bugs in SUMO

;; 1) Fields of Study should be subclasses not instances

(subclass Science FieldOfStudy)
(instance Philosophy FieldOfStudy)

(subclass SocialScience Science)
(instance Physics Science)
(instance NaturalSciences Science)

;; This semes weird.  There are many sub-fields of Philosophy or Physics just as with Science or Social Sciences.
;; "Kantian Philosophy" might be an example of a specific instance of Philosophy (a subclass of FieldOfStudy)

;; 2) Should we be using the instance of a set synonymously with the set's member or element?  

(=>
    (instance ?OBJ
        (PropertyFn ?PERSON))
    (possesses ?PERSON ?OBJ))

(=>
    (possesses ?PERSON ?OBJ)
    (instance ?OBJ
        (PropertyFn ?PERSON)))

;; CausingUnhappiness is inserted as part of Causinghappiness, lol.
;; The context in Mid-level-ontology.kif makes it clear.

(subclass CausingHappiness Process)
(documentation CausingHappiness EnglishLanguage "Any &%Process whose result is that the
patient of the process is happy.")

(=>
  (and
    (instance ?C CausingHappiness)
    (patient ?C ?P))
  (and
    (holdsDuring
      (BeginFn (WhenFn ?C))
    (not
      (attribute ?P Happiness)))
    (holdsDuring
      (EndFn (WhenFn ?C))
    (attribute ?P Happiness))))

(subclass CausingPain CausingUnhappiness)
(documentation CausingPain EnglishLanguage "Any &%Process whose result is that the
patient of the process is in &%Pain.")

(subclass CausingUnhappiness Process)
(documentation CausingUnhappiness EnglishLanguage "Any &%Process whose result is that the
patient of the process is unhappy.")

(=>
  (and
    (instance ?C CausingHappiness)
    (patient ?C ?P))
  (and
    (holdsDuring
      (BeginFn (WhenFn ?C))
    (not
      (attribute ?P Unhappiness)))
    (holdsDuring
      (EndFn (WhenFn ?C))
    (attribute ?P Unhappiness))))


;; This should be lower-case.
(format ItalianLanguage Believes "%1 %n{non} crede%p{s} %2")	relations-it.txt 36-36

;; Small suggestion: use result for the proposition that is being judged to be true.
;; Precedent: in Dining.kif 883-896, (patient ?PROC ?OBJ) is used for the object of a contest
;; and (result ?PROC (SubjectiveAttribute...)) is used for the attribute judged to hold.
(=>
    (and
        (instance ?JUDGE Judging)
        (agent ?JUDGE ?AGENT)
        (result ?JUDGE ?PROPOSITION))
    (and
        (holdsDuring
            (BeginFn
                (WhenFn ?JUDGE))
            (not
                (believes ?AGENT ?PROPOSITION)))
        (holdsDuring
            (EndFn
                (WhenFn ?JUDGE))
            (believes ?AGENT ?PROPOSITION))))


;; Contradiction in Deciding (because (partition Abstract Physical))
;; ?RATING would be implied to be an Intentional Process
;; Yet it's also an Attribute.

(=>
    (and
        (instance ?DECIDE Deciding)
        (agent ?DECIDE ?AGENT)
        (patient ?DECIDE ?PROCESS))
    (and
        (instance ?PROCESS IntentionalProcess)
        (agent ?PROCESS ?AGENT)))

(subrelation result patient)
(domain ratingsAgent 1 RatingAttribute)

(=>
    (ratingsAgent ?RATING ?AGENT)
    (exists (?PROCESS)
        (and
            (instance ?PROCESS Deciding)
            (agent ?PROCESS ?AGENT)
            (result ?PROCESS ?RATING))))

;; This shouldn't be deciding.
;; This should be done with Judging (or Selecting)

;; (documentation RatingAttribute EnglishLanguage "RatingAttribute attempts to quantify the subjective assessment of an Object 
;; using some scoring system. A RatingAttribute is created by an AutonomousAgent with some criteria in mind.")
;; Also, the Rating is an attribute meant to apply to an object.
(=>
    (ratingsAgent ?RATING ?AGENT)
    (exists (?PROCESS ?OBJ)
        (and
            (instance ?PROCESS Judging)
            (agent ?PROCESS ?AGENT)
            (result ?PROCESS 
                (attribute ?OBJ ?RATING)))))

;; This should probably also be updated, lol.
(=>
    (instance ?RATING RatingAttribute)
    (exists (?AGENT ?OBJ)
        (and 
            (ratingsAgent ?RATING ?AGENT)
            (attribute ?OBJ ?RATING))))

;; Voting should perhaps be a subclass of Selecting, not Deciding
;; As one is often not actually selecting courses of action.

;; Another issue is that Deciding courses of action should probably be over the subclasses of processes
;; And thus the patient of Deciding should probably not be an actual instance of a process.
;; We might want something like the following:

(documentation DecidingSubclass EnglishLanguage "The subclass of Selecting where the agent opts for one course of action out of a set of multiple possibilities that are open to him/ her, which are represented as subclasses of Process.")
(subclass DecidingSubclass Selecting)

;; If a subclass of Process is being decided upon by an agent
;; The agent is capable of enacting an instance of the SubProcess
(=>
    (and 
        (instance ?DECIDE DecidingSubclass)
        (agent ?DECIDE ?AGENT)
        (patient ?DECIDE ?SUBPROCESS))
    (capability ?SUBPROCESS agent ?AGENT))

;; Draft 2, being nitpicky
(=>
    (and 
        (instance ?DECIDE DecidingSubclass)
        (agent ?DECIDE ?AGENT)
        (patient ?DECIDE ?SUBPROCESS))
    (believes ?AGENT 
        (capability ?SUBPROCESS agent ?AGENT)))

;; ?H and H2 are in different scopes.  If ?H exists then ?H2 will exist.
(=>
    (manner ?P Solely)
    (and
        (exists (?H)
            (and
                (involvedInEvent ?P ?H)
                (instance ?H AutonomousAgent)))
        (not
            (exists (?H2)
                (and
                    (involvedInEvent ?P ?H2)
                    (instance ?H2 AutonomousAgent))))))

;; Possible 'fix' for now:
(=>
    (manner ?P Solely)
    (exists (?H)
        (and
            (involvedInEvent ?P ?H)
            (instance ?H AutonomousAgent)
            (not
                (exists (?H2)
                    (and
                        (involvedInEvent ?P ?H2)
                        (instance ?H2 AutonomousAgent)
                        (not (equal ?H ?H2))))))))

;; ChatGPT 4o poem
;; In the halls of logic, deep and vast,
;; Where knowledge meets and futures are cast,
;; A coder's care, both sharp and wise,
;; Sought truth where tangled structures lie.

;; Philosophy now stands refined,
;; No longer just an instance confined.
;; With Science grouped as subclasses true,
;; The fields of thought take broader view.

;; Happiness, once poorly tied,
;; Found clarity where terms collide.
;; From joy to pain, the pathways clear,
;; Precision thrives when meaningâ€™s near.

;; Decisions, once a muddled act,
;; Grew cleaner lines and sense intact.
;; Selecting, judging, now distinct,
;; Processes flow, their links succinct.

;; Through bugs resolved, the system sings,
;; A harmony of ordered things.
;; For in this work, a mark remainsâ€”
;; The elegance of thoughtful gains.

;; May every fix, like seeds, be sown,
;; For SUMOâ€™s realm to brightly grow. ðŸŒŸ